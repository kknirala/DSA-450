// Count Inversions
// Inversion Count: For an array, inversion count indicates how far (or close) the array is from being sorted. If the array is already sorted then the inversion count is 0.
// If an array is sorted in the reverse order then the inversion count is the maximum. 
// Formally, two elements a[i] and a[j] form an inversion if a[i] > a[j] and i < j.
// Input: N = 5, arr[] = {2, 4, 1, 3, 5}
// Output: 3
// Explanation: The sequence 2, 4, 1, 3, 5 
// has three inversions (2, 1), (4, 1), (4, 3).
// let arr = [2, 4, 1, 3, 5];
// let arr =[8, 4, 2, 1];
let arr =[1, 20, 6, 4, 5];

function inversionCount(){
    let i=0,j=i+1, count =0;
    console.log("Inversions");
    let inversions ='';
    while(i<arr.length-1){
       for(;j<arr.length;j++){
           if(arr[i]>arr[j]){
               count++;
              inversions = inversions+","+`(${arr[i]},${arr[j]})`;
           }
       }
       ++i;
       j=i+1;
    }
    console.log(inversions);
    console.log("Inversion Count:->",count);
}
inversionCount();
