// Best Time to Buy and Sell Stock
// You are given an array prices where prices[i] is the price of a given stock on the ith day.

// You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

// Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.
// -----------Example-------------------
// Input: prices = [7,1,5,3,6,4]
// Output: 5
// Explanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.
// Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell.

// my explanation:-> find the index of min value in array, and then find the greatest number after the losted value index.


function maxProfit(){
    let arr = [7,1,5,3,6,4];
    // let arr = [7,6,4,3,1];
    let lowerIndex = -1;
    let lowerValue = arr[0];
    let maxVal = Number.MIN_VALUE;

   for(let i=1;i<arr.length;i++){
       if(lowerValue>arr[i]) 
       {
           lowerValue=arr[i];
           lowerIndex = i;
       }
   }
   for(let i = lowerIndex;i<arr.length;i++){
       if(arr[i]>maxVal) maxVal=arr[i]
   }
   console.log("Profit:-> ",maxVal-arr[lowerIndex]);
}
maxProfit();

// -----------------------------
function maxProfit1(){
    let arr = [7,1,5,3,6,4];
    // let arr = [7,6,4,3,1];
    let max_profit = 0;
    let buyingPrice = arr[0];
    for(let i=1;i<arr.length;i++){
        if(buyingPrice>arr[i]){
            buyingPrice =arr[i];
        }
        else if(arr[i]-buyingPrice>max_profit)
            max_profit=arr[i]-buyingPrice
    }
    
   console.log("Max Profit:-> ",max_profit);
}
maxProfit1();
