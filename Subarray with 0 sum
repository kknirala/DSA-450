// Subarray with 0 sum
// Given an array of integers. Find if there is a subarray (of size at-least one) with 0 sum. You just need to return true/false depending upon whether there is a subarray present with 0-sum or not. Printing will be taken care by the driver code.
// with time complexity o(n2)
function subArrayExists(){
    // let arr = [-3,2,3,1,6];
    let arr = [1,4,-2,-2,5,-4,3];
    // let arr = [4,2,-3,1,6];
    let sum=0;
    for(let i=0;i<arr.length;i++){
        sum = 0;
        for(let j=i;j<arr.length;j++){
            sum = sum+arr[j];
            // console.log(sum, arr[j])
            if(arr[j]==0 || sum == 0) {
                // console.log("sum= ", sum)
                return true;
            }
        }
    }
}
if(subArrayExists())
     console.log("Found a subarray with 0 sum")
else console.log("No Such Sub Array Exists!")
    
// with hashing technique

function zeroSumSubArray(){
    let set = new Set();
      let arr = [-3,2,3,1,6];
    // let arr = [1,4,-2,-2,5,-4,3];
    // let arr = [4,2,-3,1,6];
    let sum=0;
    for(let i=0;i<arr.length;i++){
        sum = sum + arr[i];
        if(sum == 0 || arr[i]== 0 || set.has(sum)){
            return true;
        }
        set.add(sum);
    }
    return false;
}

if(zeroSumSubArray())
     console.log("Found a subarray with 0 sum")
else console.log("No Such Sub Array Exists!")
    
    
